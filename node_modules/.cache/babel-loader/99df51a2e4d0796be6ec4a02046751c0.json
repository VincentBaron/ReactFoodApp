{"ast":null,"code":"var _jsxFileName = \"/Users/vincentbaron/Desktop/Javascript/Food_App/src/Store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nfunction cartReducer(state, action) {\n  let updatedItems;\n\n  if (action.type === \"ADD\") {\n    const updatedTotal = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotal\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const existingCartItemIndex = state.itemsfindIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotal = state.totalAmount - existingItem.price;\n    let updateItems;\n\n    if (existingItem.amount === 1) {\n      updateItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      total: updatedTotal\n    };\n  }\n\n  return defaultCartState;\n}\n\nfunction CartProvider(props) {\n  _s();\n\n  const [cartState, dispatchCart] = useReducer(cartReducer, defaultCartState);\n\n  function addItemToCartHandler(item) {\n    dispatchCart({\n      type: \"ADD\",\n      item: item\n    });\n  }\n\n  function removeItemFromCartHandler(id) {\n    dispatchCart({\n      type: \"REMOVE\",\n      id: id\n    });\n  }\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartProvider, \"ZY2kzjH0eT2UJ8xdytMWU1wIqqA=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/vincentbaron/Desktop/Javascript/Food_App/src/Store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","updatedItems","type","updatedTotal","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItem","concat","itemsfindIndex","existingItem","updateItems","filter","total","CartProvider","props","cartState","dispatchCart","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nfunction cartReducer(state, action) {\n  let updatedItems;\n  if (action.type === \"ADD\") {\n    const updatedTotal =\n      state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n    const existingCartItem = state.items[existingCartItemIndex];\n\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount,\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotal,\n    };\n  }\n  if (action.type === \"REMOVE\") {\n    const existingCartItemIndex = state.itemsfindIndex(\n      (item) => item.id === action.id\n    );\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotal = state.totalAmount - existingItem.price;\n    let updateItems\n    if (existingItem.amount === 1) {\n      updateItems = state.items.filter(item => item.id !== action.id)\n    }\n    else {\n      const updatedItem = {...existingItem, amount: existingItem.amount - 1}\n      updatedItems = [...state.items]\n      updatedItems[existingCartItemIndex] = updatedItem\n    }\n    return {\n      items: updatedItems,\n      total: updatedTotal\n    }\n  }\n  return defaultCartState;\n}\n\nfunction CartProvider(props) {\n  const [cartState, dispatchCart] = useReducer(cartReducer, defaultCartState);\n\n  function addItemToCartHandler(item) {\n    dispatchCart({ type: \"ADD\", item: item });\n  }\n\n  function removeItemFromCartHandler(id) {\n    dispatchCart({ type: \"REMOVE\", id: id });\n  }\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n}\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}