{"ast":null,"code":"var _jsxFileName = \"/Users/vincentbaron/Desktop/Javascript/Food_App/src/Store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nfunction cartReducer(state, action) {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotal = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotal\n    };\n  }\n\n  return defaultCartState;\n}\n\nfunction CartProvider(props) {\n  _s();\n\n  const [cartState, dispatchCart] = useReducer(cartReducer, defaultCartState);\n\n  function addItemToCart(item) {\n    dispatchCart({\n      type: 'ADD',\n      item: item\n    });\n  }\n\n  function removeItemFromCart(id) {\n    dispatchCart({\n      type: 'REMOVE',\n      id: id\n    });\n  }\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n}\n\n_s(CartProvider, \"ZY2kzjH0eT2UJ8xdytMWU1wIqqA=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/vincentbaron/Desktop/Javascript/Food_App/src/Store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","updatedTotal","price","amount","CartProvider","props","cartState","dispatchCart","addItemToCart","removeItemFromCart","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAElC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,YAAY,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MAAzE;AACA,WAAO;AACLX,MAAAA,KAAK,EAAEM,YADF;AAELL,MAAAA,WAAW,EAAEQ;AAFR,KAAP;AAID;;AAGD,SAAOV,gBAAP;AACD;;AAED,SAASa,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAA5C;;AACE,WAASiB,aAAT,CAAuBR,IAAvB,EAA6B;AAC3BO,IAAAA,YAAY,CAAC;AAACV,MAAAA,IAAI,EAAE,KAAP;AAAcG,MAAAA,IAAI,EAAEA;AAApB,KAAD,CAAZ;AAED;;AAED,WAASS,kBAAT,CAA4BC,EAA5B,EAAgC;AAC9BH,IAAAA,YAAY,CAAC;AAACV,MAAAA,IAAI,EAAE,QAAP;AAAiBa,MAAAA,EAAE,EAAEA;AAArB,KAAD,CAAZ;AACD;;AAED,QAAMC,WAAW,GAAG;AAChBnB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADD;AAEhBC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFP;AAGhBmB,IAAAA,OAAO,EAAEJ,aAHO;AAIhBK,IAAAA,UAAU,EAAEJ;AAJI,GAApB;AAOF,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cAA2CN,KAAK,CAACS;AAAjD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAnBQV,Y;;KAAAA,Y;AAqBT,eAAeA,YAAf","sourcesContent":["import { useReducer } from 'react'\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n}\n\nfunction cartReducer(state, action) {\n  \n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item)\n    const updatedTotal = state.totalAmount + action.item.price * action.item.amount\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotal\n    }\n  }\n\n  \n  return defaultCartState \n}\n\nfunction CartProvider(props) {\n  const [cartState, dispatchCart] = useReducer(cartReducer, defaultCartState)\n    function addItemToCart(item) {\n      dispatchCart({type: 'ADD', item: item})\n\n    }\n\n    function removeItemFromCart(id) {\n      dispatchCart({type: 'REMOVE', id: id})\n    }\n\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemToCart,\n        removeItem: removeItemFromCart\n    }\n\n  return <CartContext.Provider value={cartContext}>{props.children}</CartContext.Provider>;\n}\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}